<?php

namespace App\Exports;
use DB;
use Auth;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;


use Illuminate\Http\Request;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use App\Models\Admin\TblMstUser;


use Session;
use Response;
use SimpleXMLElement;
use Spatie\ArrayToXml\ArrayToXml;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use Chartblocks;
use App\Exports\ItemWiseDetail;
use Maatwebsite\Excel\Facades\Excel;














class ItemWiseDetail implements FromCollection, WithHeadings
{


 function __construct($From_Date,$To_Date,$BranchGroup,$BranchName,$ITEMGID,$ITEMID,$CYID) {
        $this->ITEMID = $ITEMID;
        $this->From_Date = $From_Date;
        $this->To_Date = $To_Date;
        $this->BranchName = $BranchName;
        $this->ITEMGID = $ITEMGID;
		$this->BranchGroup = $BranchGroup;
        $this->CYID = $CYID;
 }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {

        //dd($this->From_Date); 
        
        $ITEMID=implode(",",$this->ITEMID);
        $BranchName=implode(",",$this->BranchName);      
		$BranchGroup=implode(",",$this->BranchGroup); 
        $ITEMGID=implode(",",$this->ITEMGID);
       



      return collect( $data=DB::select("SELECT G.BG_DESC,F.BRNAME,C.NAME AS STORENAME,A.SOURCEDOCNO, A.SOURCEDOCDT, H.GROUPNAME,A.ITEM,A.STID,A.UOMID,B.ICODE,B.NAME,D.UOMCODE, E.BUNAME, B.ALPS_PART_NO,
        B.CUSTOMER_PART_NO,B.OEM_PART_NO,B.SAP_CUSTOMER_NAME,ISNULL(A.OPENING_QTY,0.000) AS OPENING_QTY,ISNULL(A.INQTY,0.000) AS INQTY,ISNULL(A.OUTQTY,0.000) AS OUTQTY,
        A.RATE,A.INAMOUNT, A.OUTAMOUNT
		FROM (
		select NULL AS SOURCEDOCNO, NULL AS SOURCEDOCDT,A.ITEMID_REF AS ITEM, A.STID_REF AS STID, A.UOMID_REF AS UOMID,0.000 AS INQTY, 0.000 AS OUTQTY,
        SUM((ISNULL(A.OPENING_QTY,0.000)+ISNULL(A.IN_QTY,0.000))-ISNULL(A.OUT_QTY,0.000)) AS OPENING_QTY,A.BRID_REF,0.00000 AS RATE,0.00 AS OPENINGAMOUNT,
        0.00 INAMOUNT,0.00 AS OUTAMOUNT 
        from TBL_MST_STOCK_BATCH_HIS A (NOLOCK) WHERE A.DATE < '$this->From_Date' AND A.STATUS = 'A' AND A.CYID_REF = $this->CYID AND A.BRID_REF IN ($BranchName)
        GROUP BY A.ITEMID_REF, A.STID_REF, A.UOMID_REF,A.BRID_REF
		UNION
		SELECT B.GRN_NO AS SOURCEDOCNO, B.GRN_DT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.MAIN_UOMID_REF AS UOMID,SUM(A.RECEIVED_QTYM) AS INQTY, 0.000 AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,C.RATE,0.00 AS OPENINGAMOUNT,CAST((SUM(A.RECEIVED_QTYM)*C.RATE) AS NUMERIC(14,2)) AS INAMOUNT,
        0.00 AS OUTAMOUNT
		FROM TBL_TRN_IGRN02_MULTISTORE A(NOLOCK) INNER JOIN TBL_TRN_IGRN02_HDR B(NOLOCK) ON A.GRNID_REF = B.GRNID 
		INNER JOIN TBL_TRN_IGRN02_MAT C(NOLOCK) ON A.GRNID_REF = C.GRNID_REF AND  A.ITEMID_REF = C.ITEMID_REF AND A.MAIN_UOMID_REF = C.MAIN_UOMID_REF
		AND ISNULL(A.POID_REF,'') = ISNULL(C.POID_REF,'') AND ISNULL(A.BPOID_REF,'') = ISNULL(C.BPOID_REF,'') AND ISNULL(A.MRSID_REF,'') = ISNULL(C.MRSID_REF,'')
        AND ISNULL(A.PIID_REF,'') = ISNULL(C.PIID_REF,'') AND ISNULL(A.RFQID_REF,'') = ISNULL(C.RFQID_REF,'')
        AND ISNULL(A.VQID_REF,'') = ISNULL(C.VQID_REF,'') AND ISNULL(A.IPOID_REF,'') = ISNULL(C.IPOID_REF,'')
		WHERE B.GRN_DT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
		GROUP BY B.GRN_NO, B.GRN_DT,A.ITEMID_REF,A.STID_REF,A.MAIN_UOMID_REF,B.BRID_REF,C.RATE
		UNION
		SELECT B.GRNNO AS SOURCEDOCNO, B.GRNDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.UOMID_REF AS UOMID,SUM(A.RECEIVED_QTY) AS INQTY, 0.000 AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,C.RATE,0.00 AS OPENINGAMOUNT,CAST((SUM(A.RECEIVED_QTY)*C.RATE) AS NUMERIC(14,2)) AS INAMOUNT,
        0.00 AS OUTAMOUNT
		FROM TBL_TRN_GRJ_MULTISTORE A(NOLOCK) INNER JOIN TBL_TRN_GRJ_HDR B(NOLOCK) ON A.GRJID_REF = B.GRJID
        INNER JOIN TBL_TRN_GRJ_MAT C(NOLOCK) ON A.GRJID_REF = C.GRJID_REF AND  A.ITEMID_REF = C.ITEMID_REF AND A.UOMID_REF = C.UOMID_REF
		AND A.GRJ_MATID_REF = C.GRJ_MATID AND ISNULL(A.JWCID_REF,'') = ISNULL(C.JWCID_REF,'') AND ISNULL(A.JWOID_REF,'') = ISNULL(C.JWOID_REF,'')
        AND ISNULL(A.PROID_REF,'') = ISNULL(C.PROID_REF,'') AND ISNULL(A.SOID_REF,'') = ISNULL(C.SOID_REF,'')
        AND ISNULL(A.SQID_REF,'') = ISNULL(C.SQID_REF,'') AND ISNULL(A.SEID_REF,'') = ISNULL(C.SEID_REF,'')
		WHERE B.GRNDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
		GROUP BY B.GRNNO, B.GRNDT,A.ITEMID_REF,A.STID_REF,A.UOMID_REF,B.BRID_REF,C.RATE
		UNION 
		SELECT B.PNM_NO AS SOURCEDOCNO, B.PNM_DT AS SOURCEDOCDT,B.ITEMID_REF AS ITEM,B.TO_STAGE_STORE_QC AS STID,B.UOMID_REF AS UOMID,SUM(B.PNM_QTY) AS INQTY, 0.000 AS OUTQTY,
		0.000 AS OPENING_QTY ,B.BRID_REF,CAST((B.TOTAL_COST/SUM(B.PNM_QTY)) AS NUMERIC(12,5)) AS RATE,0.00 AS OPENINGAMOUNT,
        B.TOTAL_COST AS INAMOUNT,0.00 AS OUTAMOUNT
		FROM TBL_TRN_PDPNM_HDR B(NOLOCK) 
		WHERE B.PNM_DT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.MOVEMENT_STAGE = 'TO STORE' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
		GROUP BY B.PNM_NO, B.PNM_DT,B.ITEMID_REF,B.TO_STAGE_STORE_QC,B.UOMID_REF,B.BRID_REF,B.TOTAL_COST
		UNION
		SELECT B.ST_ADJUST_DOCNO AS SOURCEDOCNO, B.ST_ADJUST_DOCDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.MAIN_UOMID_REF AS UOMID,SUM(A.QTY) AS INQTY, 0.000 AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,C.RATE,0.00 AS OPENINGAMOUNT,CAST((SUM(A.QTY)*C.RATE) AS NUMERIC(14,2)) AS INAMOUNT,0.00 AS OUTAMOUNT
		FROM TBL_TRN_STOCK_ADJUST_STORE A(NOLOCK) INNER JOIN TBL_TRN_STOCK_ADJUST_HDR B(NOLOCK) ON A.ST_ADJUSTID_REF = B.ST_ADJUSTID
        INNER JOIN TBL_TRN_STOCK_ADJUST_MAT C(NOLOCK) ON A.ST_ADJUSTID_REF = C.ST_ADJUSTID_REF AND  A.ITEMID_REF = C.ITEMID_REF AND A.MAIN_UOMID_REF = C.UOMID_REF
		AND ISNULL(A.ITEMGID_REF,'') = ISNULL(C.ITEMGID_REF,'') 
		WHERE B.ST_ADJUST_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.ST_ADJUST_TYPE = 'IN' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
		GROUP BY B.ST_ADJUST_DOCNO, B.ST_ADJUST_DOCDT,A.ITEMID_REF,A.STID_REF,A.MAIN_UOMID_REF,B.BRID_REF,C.RATE
		UNION
		SELECT B.ST_ST_DOCNO AS SOURCEDOCNO, B.ST_ST_DOCDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.MAIN_UOMID_REF AS UOMID,SUM(A.QTY) AS INQTY, 0.000 AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,C.RATE_IN,0.00 AS OPENINGAMOUNT,CAST((SUM(A.QTY)*C.RATE_IN) AS NUMERIC(14,2)) AS INAMOUNT,0.00 AS OUTAMOUNT
		FROM TBL_TRN_STOCK_STOCK_STORE A(NOLOCK) INNER JOIN TBL_TRN_STOCK_STOCK_HDR B(NOLOCK) ON A.ST_STID_REF = B.ST_STID
        INNER JOIN TBL_TRN_STOCK_STOCK_MAT C(NOLOCK) ON A.ST_STID_REF = C.ST_STID_REF AND  A.ITEMID_REF = C.ITEMID_REF_IN AND A.MAIN_UOMID_REF = C.UOMID_REF_IN
		WHERE B.ST_ST_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND A.STOCK_TYPE = 'IN' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
		GROUP BY B.ST_ST_DOCNO, B.ST_ST_DOCDT,A.ITEMID_REF,A.STID_REF,A.MAIN_UOMID_REF,B.BRID_REF,C.RATE_IN
		UNION
		SELECT B.ST_ST_DOCNO AS SOURCEDOCNO, B.ST_ST_DOCDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.MAIN_UOMID_REF AS UOMID,0.000 AS INQTY,
        SUM(A.QTY) AS OUTQTY, 0.000 AS OPENING_QTY,B.BRID_REF,C.RATE,0.00 AS OPENINGAMOUNT,0.00 INAMOUNT,
        CAST((SUM(A.QTY)*C.RATE) AS NUMERIC(14,2)) AS OUTAMOUNT
		FROM TBL_TRN_STOCK_STOCK_STORE A(NOLOCK) INNER JOIN TBL_TRN_STOCK_STOCK_HDR B(NOLOCK) ON A.ST_STID_REF = B.ST_STID
        INNER JOIN TBL_TRN_STOCK_STOCK_MAT C(NOLOCK) ON A.ST_STID_REF = C.ST_STID_REF AND  A.ITEMID_REF = C.ITEMID_REF AND A.MAIN_UOMID_REF = C.UOMID_REF
		WHERE B.ST_ST_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND A.STOCK_TYPE = 'OUT' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
		GROUP BY B.ST_ST_DOCNO, B.ST_ST_DOCDT,A.ITEMID_REF,A.STID_REF,A.MAIN_UOMID_REF,B.BRID_REF,C.RATE
		UNION
		SELECT B.ST_ADJUST_DOCNO AS SOURCEDOCNO, B.ST_ADJUST_DOCDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.MAIN_UOMID_REF AS UOMID,0.000 AS INQTY, SUM(A.QTY) AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,C.RATE,0.00 AS OPENINGAMOUNT,0.00 INAMOUNT, CAST((SUM(A.QTY)*C.RATE) AS NUMERIC(14,2)) AS OUTAMOUNT
		FROM TBL_TRN_STOCK_ADJUST_STORE A(NOLOCK) INNER JOIN TBL_TRN_STOCK_ADJUST_HDR B(NOLOCK) ON A.ST_ADJUSTID_REF = B.ST_ADJUSTID
        INNER JOIN TBL_TRN_STOCK_ADJUST_MAT C(NOLOCK) ON A.ST_ADJUSTID_REF = C.ST_ADJUSTID_REF AND  A.ITEMID_REF = C.ITEMID_REF AND A.MAIN_UOMID_REF = C.UOMID_REF
		AND ISNULL(A.ITEMGID_REF,'') = ISNULL(C.ITEMGID_REF,'')
		WHERE B.ST_ADJUST_DOCDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.ST_ADJUST_TYPE = 'OUT' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
		GROUP BY B.ST_ADJUST_DOCNO, B.ST_ADJUST_DOCDT,A.ITEMID_REF,A.STID_REF,A.MAIN_UOMID_REF,B.BRID_REF,C.RATE
		UNION
		SELECT B.SCNO AS SOURCEDOCNO, B.SCDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.MAINUOMID_REF AS UOMID,0.000 AS INQTY, SUM(A.DISPATCH_MAIN_QTY) AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,D.RATE,0.00 AS OPENINGAMOUNT,0.00 INAMOUNT, D.AMOUNT AS OUTAMOUNT
		FROM TBL_TRN_SLSC01_STORE A(NOLOCK) INNER JOIN TBL_TRN_SLSC01_HDR B(NOLOCK) ON A.SCID_REF = B.SCID
        INNER JOIN TBL_MST_BATCH C (NOLOCK) ON A.ITEMID_REF = C.ITEMID_REF AND A.MAINUOMID_REF = C.UOMID_REF AND A.STID_REF = C.STID_REF
        AND A.BATCHNO = C.BATCH_CODE INNER JOIN TBL_MST_STOCK_BATCH_HIS D ON A.ITEMID_REF = D.ITEMID_REF AND A.MAINUOMID_REF = D.UOMID_REF
        AND A.STID_REF = D.STID_REF AND A.SCID_REF = D.RCID AND C.BATCHID = D.BATCHID_REF
		WHERE B.SCDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
        AND D.VTID = 43
		GROUP BY B.SCNO, B.SCDT,A.ITEMID_REF,A.STID_REF,A.MAINUOMID_REF,B.BRID_REF,D.RATE,D.AMOUNT
		UNION
		SELECT B.JWCNO AS SOURCEDOCNO, B.JWCDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.UOMID_REF AS UOMID,0.000 AS INQTY, SUM(A.DIS_QTY) AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,D.RATE,0.00 AS OPENINGAMOUNT,0.00 INAMOUNT, D.AMOUNT AS OUTAMOUNT
		FROM TBL_TRN_JWC_STORE A(NOLOCK) INNER JOIN TBL_TRN_JWC_HDR B(NOLOCK) ON A.JWCID_REF = B.JWCID
        INNER JOIN TBL_MST_STOCK_BATCH_HIS D ON A.ITEMID_REF = D.ITEMID_REF AND A.UOMID_REF = D.UOMID_REF AND A.STID_REF = D.STID_REF
        AND A.JWCID_REF = D.RCID AND A.BATCHID_REF = D.BATCHID_REF
		WHERE B.JWCDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
        AND D.VTID = 441
		GROUP BY B.JWCNO, B.JWCDT,A.ITEMID_REF,A.STID_REF,A.UOMID_REF,B.BRID_REF,D.RATE, D.AMOUNT
		UNION
		SELECT B.MIS_NO AS SOURCEDOCNO, B.MIS_DT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.MAIN_UOMID_REF AS UOMID,0.000 AS INQTY, SUM(A.ISSUED_QTYM) AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,D.RATE,0.00 AS OPENINGAMOUNT,0.00 INAMOUNT, D.AMOUNT AS OUTAMOUNT
		FROM TBL_TRN_MISS01_MULTISTORE A(NOLOCK) INNER JOIN TBL_TRN_MISS01_HDR B(NOLOCK) ON A.MISID_REF = B.MISID
        INNER JOIN TBL_MST_STOCK_BATCH_HIS D ON A.ITEMID_REF = D.ITEMID_REF AND A.MAIN_UOMID_REF = D.UOMID_REF AND A.STID_REF = D.STID_REF
        AND A.MISID_REF = D.RCID AND A.BATCH_CODE = D.BATCHID_REF
		WHERE B.MIS_DT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
        AND D.VTID = 89
		group by B.MIS_NO, B.MIS_DT,A.ITEMID_REF,A.STID_REF,A.MAIN_UOMID_REF,B.BRID_REF,D.RATE, D.AMOUNT
		UNION
		SELECT B.MISRNO AS SOURCEDOCNO, B.MISRDT AS SOURCEDOCDT,A.ITEMID_REF AS ITEM,A.STID_REF AS STID,A.UOMID_REF AS UOMID,0.000 AS INQTY, SUM(A.ISSUED_QTY) AS OUTQTY,
		0.000 AS OPENING_QTY,B.BRID_REF,D.RATE,0.00 AS OPENINGAMOUNT,0.00 INAMOUNT, D.AMOUNT AS OUTAMOUNT
		FROM TBL_TRN_PDMISR_STORE A(NOLOCK) INNER JOIN TBL_TRN_PDMISR_HDR B(NOLOCK) ON A.MISRID_REF = B.MISRID
        INNER JOIN TBL_MST_STOCK_BATCH_HIS D ON A.ITEMID_REF = D.ITEMID_REF AND A.UOMID_REF = D.UOMID_REF AND A.STID_REF = D.STID_REF
        AND A.MISRID_REF = D.RCID AND A.BATCHID_REF = D.BATCHID_REF
		WHERE B.MISRDT BETWEEN '$this->From_Date' AND '$this->To_Date'  AND B.STATUS = 'A' AND B.CYID_REF = $this->CYID AND B.BRID_REF IN ($BranchName)
        AND D.VTID = 395
		group by B.MISRNO, B.MISRDT,A.ITEMID_REF,A.STID_REF,A.UOMID_REF,B.BRID_REF,D.RATE, D.AMOUNT
		) AS A	INNER JOIN TBL_MST_ITEM B (NOLOCK) ON A.ITEM = B.ITEMID
				INNER JOIN TBL_MST_ITEMGROUP H (NOLOCK) ON B.ITEMGID_REF = H.ITEMGID
				LEFT OUTER JOIN TBL_MST_STORE C (NOLOCK) ON A.STID = C.STID
				LEFT OUTER JOIN TBL_MST_UOM D (NOLOCK) ON A.UOMID = D.UOMID
				LEFT OUTER JOIN TBL_MST_BUSINESSUNIT E(NOLOCK) ON B.BUID_REF = E.BUID
				INNER JOIN TBL_MST_BRANCH F (NOLOCK) ON A.BRID_REF = F.BRID
				INNER JOIN TBL_MST_BRANCH_GROUP G (NOLOCK) ON G.BGID = F.BGID_REF
		WHERE A.ITEM IN ($ITEMID) AND B.ITEMGID_REF IN ($ITEMGID) AND A.BRID_REF IN ($BranchName) AND F.BGID_REF IN ($BranchGroup)"));

      
    }

    public function headings(): array
    {
        //Put Here Header Name That you want in your excel sheet 
        return [
          'Branch Group',
          'Branch Name',
          'Store Name',
		  'Source Doc No',
		  'Source Doc Date',
          'Item Group',
		  'Item ID',
		  'Store ID',
		  'UOM ID',
          'Item Code',
          'Item Name',
           'UOM',
           'Business Unit',
           'Alps Part No',
           'Customer Part No',
           'OEM Part No',
		   'Sap Customer Name',
           'Opening Qty',
          'IN Qty',
          'Out Qty',
		  'Rate',
		  'IN Qty Amount',
		  'OUT Qty Amount'
          ];
    }
}





